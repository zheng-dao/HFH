{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lambda Function resource stack creation using Amplify CLI",
  "Parameters": {
    "CloudWatchRule": {
      "Type": "String",
      "Default": "NONE",
      "Description": " Schedule Expression"
    },
    "deploymentBucketName": {
      "Type": "String"
    },
    "env": {
      "Type": "String"
    },
    "s3Key": {
      "Type": "String"
    },
    "apihotelsforheroesGraphQLAPIIdOutput": {
      "Type": "String",
      "Default": "apihotelsforheroesGraphQLAPIIdOutput"
    },
    "apihotelsforheroesGraphQLAPIEndpointOutput": {
      "Type": "String",
      "Default": "apihotelsforheroesGraphQLAPIEndpointOutput"
    },
    "apihotelsforheroesGraphQLAPIKeyOutput": {
      "Type": "String",
      "Default": "apihotelsforheroesGraphQLAPIKeyOutput"
    },
    "functionhotelsforheroesmakeAuthenticatedGraphqlRequestArn": {
      "Type": "String",
      "Default": "functionhotelsforheroesmakeAuthenticatedGraphqlRequestArn"
    },
    "functionhotelsforheroesgeneratePdfArn": {
      "Type": "String",
      "Default": "functionhotelsforheroesgeneratePdfArn"
    }
  },
  "Conditions": {
    "ShouldNotCreateEnvResources": {
      "Fn::Equals": [
        {
          "Ref": "env"
        },
        "NONE"
      ]
    }
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Metadata": {
        "aws:asset:path": "./src",
        "aws:asset:property": "Code"
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "deploymentBucketName"
          },
          "S3Key": {
            "Ref": "s3Key"
          }
        },
        "Handler": "index.handler",
        "FunctionName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "downloadPdf",
            {
              "Fn::Join": [
                "",
                [
                  "downloadPdf",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "Environment": {
          "Variables": {
            "ENV": {
              "Ref": "env"
            },
            "REGION": {
              "Ref": "AWS::Region"
            },
            "API_HOTELSFORHEROES_GRAPHQLAPIIDOUTPUT": {
              "Ref": "apihotelsforheroesGraphQLAPIIdOutput"
            },
            "API_HOTELSFORHEROES_GRAPHQLAPIENDPOINTOUTPUT": {
              "Ref": "apihotelsforheroesGraphQLAPIEndpointOutput"
            },
            "API_HOTELSFORHEROES_GRAPHQLAPIKEYOUTPUT": {
              "Ref": "apihotelsforheroesGraphQLAPIKeyOutput"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]
        },
        "Runtime": "nodejs14.x",
        "Layers": [
          {
            "Ref": "functionhotelsforheroesmakeAuthenticatedGraphqlRequestArn"
          },
          {
            "Ref": "functionhotelsforheroesgeneratePdfArn"
          }
        ],
        "Timeout": 25
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "hotelsforheroesLambdaRolefcf30589",
            {
              "Fn::Join": [
                "",
                [
                  "hotelsforheroesLambdaRolefcf30589",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["lambda.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        }
      }
    },
    "lambdaexecutionpolicy": {
      "DependsOn": ["LambdaExecutionRole"],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"],
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*",
                  {
                    "region": {
                      "Ref": "AWS::Region"
                    },
                    "account": {
                      "Ref": "AWS::AccountId"
                    },
                    "lambda": {
                      "Ref": "LambdaFunction"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "AmplifyResourcesPolicy": {
      "DependsOn": ["LambdaExecutionRole"],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "amplify-lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["appsync:GraphQL"],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:appsync:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":apis/",
                      {
                        "Ref": "apihotelsforheroesGraphQLAPIIdOutput"
                      },
                      "/types/Query/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "Name": {
      "Value": {
        "Ref": "LambdaFunction"
      }
    },
    "Arn": {
      "Value": {
        "Fn::GetAtt": ["LambdaFunction", "Arn"]
      }
    },
    "Region": {
      "Value": {
        "Ref": "AWS::Region"
      }
    },
    "LambdaExecutionRole": {
      "Value": {
        "Ref": "LambdaExecutionRole"
      }
    }
  }
}
