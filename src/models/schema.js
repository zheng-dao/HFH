export const schema = {
  models: {
    Note: {
      name: 'Note',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        message: {
          name: 'message',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        timestamp: {
          name: 'timestamp',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: true,
          attributes: [],
        },
        remote_address: {
          name: 'remote_address',
          isArray: false,
          type: 'AWSIPAddress',
          isRequired: true,
          attributes: [],
        },
        Application: {
          name: 'Application',
          isArray: false,
          type: {
            model: 'Application',
          },
          isRequired: true,
          attributes: [],
          association: {
            connectionType: 'BELONGS_TO',
            targetName: 'noteApplicationId',
          },
        },
        User: {
          name: 'User',
          isArray: false,
          type: {
            model: 'User',
          },
          isRequired: true,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'noteUserId',
          },
        },
        action: {
          name: 'action',
          isArray: false,
          type: {
            enum: 'Noteaction',
          },
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        noteUserId: {
          name: 'noteUserId',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'Notes',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byApplication',
            queryField: 'listNotesByApplicationAndTimestamp',
            fields: ['noteApplicationId', 'timestamp'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'private',
                operations: ['create', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
    Application: {
      name: 'Application',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        StaysInApplication: {
          name: 'StaysInApplication',
          isArray: true,
          type: {
            model: 'Stay',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'applicationID',
          },
        },
        status: {
          name: 'status',
          isArray: false,
          type: {
            enum: 'Applicationstatus',
          },
          isRequired: false,
          attributes: [],
        },
        User: {
          name: 'User',
          isArray: false,
          type: {
            model: 'User',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'applicationUserId',
          },
        },
        AssignedTo: {
          name: 'AssignedTo',
          isArray: false,
          type: {
            model: 'User',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'applicationAssignedToId',
          },
        },
        liaison_read: {
          name: 'liaison_read',
          isArray: false,
          type: {
            enum: 'Readstatus',
          },
          isRequired: false,
          attributes: [],
        },
        admin_read: {
          name: 'admin_read',
          isArray: false,
          type: {
            enum: 'Readstatus',
          },
          isRequired: false,
          attributes: [],
        },
        Patient: {
          name: 'Patient',
          isArray: false,
          type: {
            model: 'Patient',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'applicationPatientId',
          },
        },
        ServiceMember: {
          name: 'ServiceMember',
          isArray: false,
          type: {
            model: 'ServiceMember',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'applicationServiceMemberId',
          },
        },
        exception_narrative: {
          name: 'exception_narrative',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        Guests: {
          name: 'Guests',
          isArray: true,
          type: {
            model: 'Guest',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'applicationID',
          },
        },
        liaison_terms_of_use_agreement: {
          name: 'liaison_terms_of_use_agreement',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        sm_terms_of_use_agreement: {
          name: 'sm_terms_of_use_agreement',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        Applicant: {
          name: 'Applicant',
          isArray: false,
          type: {
            model: 'Applicant',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'applicationApplicantId',
          },
        },
        applicationGroupId: {
          name: 'applicationGroupId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        Group: {
          name: 'Group',
          isArray: false,
          type: {
            model: 'Group',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'applicationGroupId',
          },
        },
        Notes: {
          name: 'Notes',
          isArray: true,
          type: {
            model: 'Note',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'Application',
          },
        },
        AffiliationID: {
          name: 'AffiliationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        applicationUserId: {
          name: 'applicationUserId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        applicationAssignedToId: {
          name: 'applicationAssignedToId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        applicationPatientId: {
          name: 'applicationPatientId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        applicationServiceMemberId: {
          name: 'applicationServiceMemberId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        applicationApplicantId: {
          name: 'applicationApplicantId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'Applications',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byGroupId',
            queryField: 'ApplicationByGroupId',
            fields: ['applicationGroupId', 'status'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'private',
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
    Stay: {
      name: 'Stay',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        applicationID: {
          name: 'applicationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        type: {
          name: 'type',
          isArray: false,
          type: {
            enum: 'Staytype',
          },
          isRequired: false,
          attributes: [],
        },
        state: {
          name: 'state',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        reservation_number: {
          name: 'reservation_number',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        payment_type: {
          name: 'payment_type',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        PaymentTypeID: {
          name: 'PaymentTypeID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        payment_method: {
          name: 'payment_method',
          isArray: false,
          type: {
            model: 'PaymentType',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'PaymentTypeID',
          },
        },
        payment_points_used: {
          name: 'payment_points_used',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        payment_cost_of_reservation: {
          name: 'payment_cost_of_reservation',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        checkout_points_used: {
          name: 'checkout_points_used',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        checkout_cost_of_reservation: {
          name: 'checkout_cost_of_reservation',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        requested_check_in: {
          name: 'requested_check_in',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        requested_check_out: {
          name: 'requested_check_out',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        status: {
          name: 'status',
          isArray: false,
          type: {
            enum: 'Staystatus',
          },
          isRequired: false,
          attributes: [],
        },
        actual_check_in: {
          name: 'actual_check_in',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        actual_check_out: {
          name: 'actual_check_out',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        guest_stayed_at_hotel: {
          name: 'guest_stayed_at_hotel',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        reason_guest_did_not_stay: {
          name: 'reason_guest_did_not_stay',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        payment_incidental_cost: {
          name: 'payment_incidental_cost',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        charge_type: {
          name: 'charge_type',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        card: {
          name: 'card',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        note: {
          name: 'note',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        reconciled: {
          name: 'reconciled',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        ready_for_final_reconcile: {
          name: 'ready_for_final_reconcile',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        comment: {
          name: 'comment',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        comparable_cost: {
          name: 'comparable_cost',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        certificate_number: {
          name: 'certificate_number',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        confirmation_number: {
          name: 'confirmation_number',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        card_used_for_incidentals: {
          name: 'card_used_for_incidentals',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        room_type_requests: {
          name: 'room_type_requests',
          isArray: false,
          type: {
            enum: 'Roomtype',
          },
          isRequired: false,
          attributes: [],
        },
        room_feature_requests: {
          name: 'room_feature_requests',
          isArray: true,
          type: {
            enum: 'Roomfeatures',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        room_type_actual: {
          name: 'room_type_actual',
          isArray: false,
          type: {
            enum: 'Roomtype',
          },
          isRequired: false,
          attributes: [],
        },
        room_feature_actual: {
          name: 'room_feature_actual',
          isArray: true,
          type: {
            enum: 'Roomfeatures',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        room_description: {
          name: 'room_description',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        room_description_actual: {
          name: 'room_description_actual',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        reason_decline: {
          name: 'reason_decline',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        reason_return: {
          name: 'reason_return',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        charge_reconcile: {
          name: 'charge_reconcile',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        hotel_reconcile: {
          name: 'hotel_reconcile',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        points_reconcile: {
          name: 'points_reconcile',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        giftcard_reconcile: {
          name: 'giftcard_reconcile',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        batch_no: {
          name: 'batch_no',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        city: {
          name: 'city',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        HotelPropertyID: {
          name: 'HotelPropertyID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        HotelBooked: {
          name: 'HotelBooked',
          isArray: false,
          type: {
            model: 'HotelProperty',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'HotelPropertyID',
          },
        },
        Application: {
          name: 'Application',
          isArray: false,
          type: {
            model: 'Application',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'BELONGS_TO',
            targetName: 'applicationStaysInApplicationId',
          },
        },
        FisherHouse: {
          name: 'FisherHouse',
          isArray: false,
          type: {
            model: 'Affiliation',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'stayFisherHouseId',
          },
        },
        narrative: {
          name: 'narrative',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        special_requests: {
          name: 'special_requests',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        hotel_files: {
          name: 'hotel_files',
          isArray: true,
          type: {
            nonModel: 'S3Object',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        notified_about_checkout: {
          name: 'notified_about_checkout',
          isArray: false,
          type: 'Int',
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        stayFisherHouseId: {
          name: 'stayFisherHouseId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'Stays',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byApplication',
            fields: ['applicationID'],
          },
        },
        {
          type: 'key',
          properties: {
            name: 'byPaymentType',
            queryField: 'listStaysByPaymentType',
            fields: ['PaymentTypeID'],
          },
        },
        {
          type: 'key',
          properties: {
            name: 'byNotificationAfterCheckout',
            queryField: 'stayByNotificationAfterCheckout',
            fields: ['notified_about_checkout', 'status'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'private',
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read', 'update'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
    PaymentType: {
      name: 'PaymentType',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        name: {
          name: 'name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        description: {
          name: 'description',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        status: {
          name: 'status',
          isArray: false,
          type: {
            enum: 'Paymenttypestatus',
          },
          isRequired: false,
          attributes: [],
        },
        type: {
          name: 'type',
          isArray: false,
          type: {
            enum: 'Paymenttypetype',
          },
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'PaymentTypes',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'paymentTypesByStatus',
            queryField: 'listPaymentTypesByStatus',
            fields: ['status', 'name'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Administrators'],
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
              },
            ],
          },
        },
      ],
    },
    HotelProperty: {
      name: 'HotelProperty',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        name: {
          name: 'name',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        address: {
          name: 'address',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        address_2: {
          name: 'address_2',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        city: {
          name: 'city',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        state: {
          name: 'state',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        zip: {
          name: 'zip',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        contact_name: {
          name: 'contact_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        contact_position: {
          name: 'contact_position',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        telephone: {
          name: 'telephone',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        email: {
          name: 'email',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        is_blacklist: {
          name: 'is_blacklist',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        status: {
          name: 'status',
          isArray: false,
          type: {
            enum: 'Hotelpropertystatus',
          },
          isRequired: false,
          attributes: [],
        },
        extension: {
          name: 'extension',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        FisherHouseID: {
          name: 'FisherHouseID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        HotelChainID: {
          name: 'HotelChainID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        HotelBrandID: {
          name: 'HotelBrandID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        FisherHouse: {
          name: 'FisherHouse',
          isArray: false,
          type: {
            model: 'Affiliation',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'FisherHouseID',
          },
        },
        HotelChain: {
          name: 'HotelChain',
          isArray: false,
          type: {
            model: 'HotelChain',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'HotelChainID',
          },
        },
        HotelBrand: {
          name: 'HotelBrand',
          isArray: false,
          type: {
            model: 'HotelBrand',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'HotelBrandID',
          },
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'HotelProperties',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Administrators'],
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
              },
              {
                allow: 'private',
                operations: ['read'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
    Affiliation: {
      name: 'Affiliation',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        name: {
          name: 'name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        type: {
          name: 'type',
          isArray: false,
          type: {
            enum: 'Affiliationtype',
          },
          isRequired: true,
          attributes: [],
        },
        status: {
          name: 'status',
          isArray: false,
          type: {
            enum: 'Affiliationstatus',
          },
          isRequired: true,
          attributes: [],
        },
        display_name: {
          name: 'display_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        address: {
          name: 'address',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        address_2: {
          name: 'address_2',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        city: {
          name: 'city',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        state: {
          name: 'state',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        zip: {
          name: 'zip',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        branch: {
          name: 'branch',
          isArray: false,
          type: {
            enum: 'Branchesofservice',
          },
          isRequired: false,
          attributes: [],
        },
        AssociatedAffiliation: {
          name: 'AssociatedAffiliation',
          isArray: false,
          type: {
            model: 'Affiliation',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'affiliationAssociatedAffiliationId',
          },
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        affiliationAssociatedAffiliationId: {
          name: 'affiliationAssociatedAffiliationId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'Affiliations',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Administrators'],
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
              },
              {
                allow: 'private',
                operations: ['create', 'read', 'update'],
                provider: 'iam',
              },
              {
                provider: 'userPools',
                ownerField: 'owner',
                allow: 'owner',
                operations: ['create', 'read', 'update', 'delete'],
                identityClaim: 'cognito:username',
              },
            ],
          },
        },
      ],
    },
    HotelChain: {
      name: 'HotelChain',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        name: {
          name: 'name',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        status: {
          name: 'status',
          isArray: false,
          type: {
            enum: 'Hotelchainstatus',
          },
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'HotelChains',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Administrators'],
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
              },
              {
                allow: 'private',
                operations: ['read'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
    HotelBrand: {
      name: 'HotelBrand',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        name: {
          name: 'name',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        status: {
          name: 'status',
          isArray: false,
          type: {
            enum: 'Hotelbrandstatus',
          },
          isRequired: false,
          attributes: [],
        },
        HotelChain: {
          name: 'HotelChain',
          isArray: false,
          type: {
            model: 'HotelChain',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'hotelBrandHotelChainId',
          },
        },
        logo: {
          name: 'logo',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        hotelBrandHotelChainId: {
          name: 'hotelBrandHotelChainId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'HotelBrands',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Administrators'],
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
              },
              {
                allow: 'private',
                operations: ['read'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
    User: {
      name: 'User',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        username: {
          name: 'username',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        first_name: {
          name: 'first_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        last_name: {
          name: 'last_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        middle_initial: {
          name: 'middle_initial',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        telephone: {
          name: 'telephone',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        signature: {
          name: 'signature',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        job: {
          name: 'job',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        admin_approval: {
          name: 'admin_approval',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        expiration_date: {
          name: 'expiration_date',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
        },
        extension: {
          name: 'extension',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        affiliation: {
          name: 'affiliation',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        timezone: {
          name: 'timezone',
          isArray: false,
          type: {
            enum: 'Timezone',
          },
          isRequired: false,
          attributes: [],
        },
        observes_dst: {
          name: 'observes_dst',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        receive_emails: {
          name: 'receive_emails',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        status: {
          name: 'status',
          isArray: false,
          type: {
            enum: 'Userstatus',
          },
          isRequired: false,
          attributes: [],
        },
        AffiliationID: {
          name: 'AffiliationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        Affiliation: {
          name: 'Affiliation',
          isArray: false,
          type: {
            model: 'Affiliation',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'AffiliationID',
          },
        },
        affiliation_type: {
          name: 'affiliation_type',
          isArray: false,
          type: {
            enum: 'Affiliationtype',
          },
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'Users',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byEmail',
            queryField: 'UsersByEmail',
            fields: ['username'],
          },
        },
        {
          type: 'key',
          properties: {
            name: 'byStatus',
            queryField: 'UsersByStatus',
            fields: ['status'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'private',
                operations: ['read'],
              },
              {
                allow: 'private',
                operations: ['read'],
                provider: 'iam',
              },
              {
                allow: 'public',
                operations: ['create'],
              },
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Administrators'],
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                provider: 'userPools',
                ownerField: 'owner',
                allow: 'owner',
                operations: ['create', 'read', 'update'],
                identityClaim: 'cognito:username',
              },
            ],
          },
        },
      ],
    },
    Patient: {
      name: 'Patient',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        first_name: {
          name: 'first_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        middle_initial: {
          name: 'middle_initial',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        last_name: {
          name: 'last_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        relationship: {
          name: 'relationship',
          isArray: false,
          type: {
            enum: 'Relationshiptoservicemember',
          },
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'Patients',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'private',
                operations: ['create', 'update', 'delete', 'read'],
              },
            ],
          },
        },
      ],
    },
    ServiceMember: {
      name: 'ServiceMember',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        first_name: {
          name: 'first_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        middle_initial: {
          name: 'middle_initial',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        last_name: {
          name: 'last_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        email: {
          name: 'email',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        telephone: {
          name: 'telephone',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        extension: {
          name: 'extension',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        branch_of_service: {
          name: 'branch_of_service',
          isArray: false,
          type: {
            enum: 'Branchesofservice',
          },
          isRequired: false,
          attributes: [],
        },
        current_status: {
          name: 'current_status',
          isArray: false,
          type: {
            enum: 'Servicememberstatus',
          },
          isRequired: false,
          attributes: [],
        },
        on_military_travel_orders: {
          name: 'on_military_travel_orders',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        other_patient: {
          name: 'other_patient',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        lodging_explanation: {
          name: 'lodging_explanation',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        unidentified_explanation: {
          name: 'unidentified_explanation',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        BaseAssignedTo: {
          name: 'BaseAssignedTo',
          isArray: false,
          type: {
            model: 'Affiliation',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'serviceMemberBaseAssignedToId',
          },
        },
        TreatmentFacility: {
          name: 'TreatmentFacility',
          isArray: false,
          type: {
            model: 'Affiliation',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'serviceMemberTreatmentFacilityId',
          },
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        serviceMemberBaseAssignedToId: {
          name: 'serviceMemberBaseAssignedToId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        serviceMemberTreatmentFacilityId: {
          name: 'serviceMemberTreatmentFacilityId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'ServiceMembers',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'private',
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
    Guest: {
      name: 'Guest',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        first_name: {
          name: 'first_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        relationship: {
          name: 'relationship',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        middle_initial: {
          name: 'middle_initial',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        last_name: {
          name: 'last_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        email: {
          name: 'email',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        telephone: {
          name: 'telephone',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        extension: {
          name: 'extension',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        applicationID: {
          name: 'applicationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        type: {
          name: 'type',
          isArray: false,
          type: {
            enum: 'Guesttype',
          },
          isRequired: false,
          attributes: [],
        },
        under_age_three: {
          name: 'under_age_three',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        address: {
          name: 'address',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        address_2: {
          name: 'address_2',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        city: {
          name: 'city',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        state: {
          name: 'state',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        zip: {
          name: 'zip',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'Guests',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byApplication',
            fields: ['applicationID'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'private',
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
    Applicant: {
      name: 'Applicant',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        first_name: {
          name: 'first_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        last_name: {
          name: 'last_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        email: {
          name: 'email',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        telephone: {
          name: 'telephone',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        signature: {
          name: 'signature',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        job: {
          name: 'job',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        branch_of_service: {
          name: 'branch_of_service',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        current_status: {
          name: 'current_status',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        base_assigned_to: {
          name: 'base_assigned_to',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        relation_to_service_member: {
          name: 'relation_to_service_member',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        referrer_date: {
          name: 'referrer_date',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        user_type: {
          name: 'user_type',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        middle_initial: {
          name: 'middle_initial',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        patient_type: {
          name: 'patient_type',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        extension: {
          name: 'extension',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        family_lodge: {
          name: 'family_lodge',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        location_name: {
          name: 'location_name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        location_address: {
          name: 'location_address',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        lodging_explanation: {
          name: 'lodging_explanation',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        Affiliation: {
          name: 'Affiliation',
          isArray: false,
          type: {
            model: 'Affiliation',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'applicantAffiliationId',
          },
        },
        affiliation_type: {
          name: 'affiliation_type',
          isArray: false,
          type: {
            enum: 'Affiliationtype',
          },
          isRequired: false,
          attributes: [],
        },
        collected_outside_fisherhouse: {
          name: 'collected_outside_fisherhouse',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        applicantAffiliationId: {
          name: 'applicantAffiliationId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'Applicants',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'private',
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
    Group: {
      name: 'Group',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        name: {
          name: 'name',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        status: {
          name: 'status',
          isArray: false,
          type: {
            enum: 'Groupstatus',
          },
          isRequired: true,
          attributes: [],
        },
        creator: {
          name: 'creator',
          isArray: false,
          type: {
            model: 'User',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'groupCreatorId',
          },
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        groupCreatorId: {
          name: 'groupCreatorId',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
      },
      syncable: true,
      pluralName: 'Groups',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Administrators'],
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
              },
              {
                allow: 'private',
                operations: ['read'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
    ConfigurationSetting: {
      name: 'ConfigurationSetting',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        name: {
          name: 'name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        value: {
          name: 'value',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'ConfigurationSettings',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byName',
            queryField: 'getConfigurationSettingByName',
            fields: ['name'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Administrators'],
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Liaisons'],
                operations: ['read'],
              },
              {
                allow: 'private',
                operations: ['read'],
              },
              {
                allow: 'public',
                operations: ['read'],
              },
            ],
          },
        },
      ],
    },
    Card: {
      name: 'Card',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        name: {
          name: 'name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        number: {
          name: 'number',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        status: {
          name: 'status',
          isArray: false,
          type: {
            enum: 'Cardstatus',
          },
          isRequired: false,
          attributes: [],
        },
        type: {
          name: 'type',
          isArray: false,
          type: {
            enum: 'Cardtype',
          },
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'Cards',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'cardsByStatus',
            queryField: 'listCardsByStatus',
            fields: ['status', 'name'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                groupClaim: 'cognito:groups',
                provider: 'userPools',
                allow: 'groups',
                groups: ['Administrators'],
                operations: ['create', 'update', 'delete', 'read'],
              },
              {
                allow: 'private',
                operations: ['read'],
              },
            ],
          },
        },
      ],
    },
    ApplicationSearchRecord: {
      name: 'ApplicationSearchRecord',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        applicationID: {
          name: 'applicationID',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        Application: {
          name: 'Application',
          isArray: false,
          type: {
            model: 'Application',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'applicationID',
          },
        },
        applicationStatus: {
          name: 'applicationStatus',
          isArray: false,
          type: {
            enum: 'Applicationstatus',
          },
          isRequired: false,
          attributes: [],
        },
        staysStatus: {
          name: 'staysStatus',
          isArray: true,
          type: {
            enum: 'Staystatus',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        checkInDates: {
          name: 'checkInDates',
          isArray: true,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        checkOutDates: {
          name: 'checkOutDates',
          isArray: true,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        primaryCheckInDate: {
          name: 'primaryCheckInDate',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        primaryCheckOutDate: {
          name: 'primaryCheckOutDate',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        noteActions: {
          name: 'noteActions',
          isArray: true,
          type: 'AWSJSON',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        assignedAdminID: {
          name: 'assignedAdminID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        assignedAdminName: {
          name: 'assignedAdminName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        assignedLiaisonID: {
          name: 'assignedLiaisonID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        assignedLiaisonName: {
          name: 'assignedLiaisonName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        groupID: {
          name: 'groupID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        groupName: {
          name: 'groupName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        confirmationNumber: {
          name: 'confirmationNumber',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        referrerName: {
          name: 'referrerName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        referrerEmail: {
          name: 'referrerEmail',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        serviceMemberName: {
          name: 'serviceMemberName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        serviceMemberEmail: {
          name: 'serviceMemberEmail',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        serviceMemberBranchOfService: {
          name: 'serviceMemberBranchOfService',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        serviceMemberDutyStatus: {
          name: 'serviceMemberDutyStatus',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        adminIsUnread: {
          name: 'adminIsUnread',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        liaisonIsUnread: {
          name: 'liaisonIsUnread',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        guestNames: {
          name: 'guestNames',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        guestEmails: {
          name: 'guestEmails',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        liaisonAffiliationID: {
          name: 'liaisonAffiliationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        liaisonAffiliationName: {
          name: 'liaisonAffiliationName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        referrerAffiliationID: {
          name: 'referrerAffiliationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        referrerAffiliationName: {
          name: 'referrerAffiliationName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        adminAffiliationID: {
          name: 'adminAffiliationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        adminAffiliationName: {
          name: 'adminAffiliationName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        treatmentCenterID: {
          name: 'treatmentCenterID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        treatmentCenterName: {
          name: 'treatmentCenterName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        baseAssignedID: {
          name: 'baseAssignedID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        baseAssignedName: {
          name: 'baseAssignedName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        vaAssignedID: {
          name: 'vaAssignedID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        vaAssignedName: {
          name: 'vaAssignedName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        hotelChainID: {
          name: 'hotelChainID',
          isArray: true,
          type: 'ID',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        hotelChainName: {
          name: 'hotelChainName',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        hotelBrandID: {
          name: 'hotelBrandID',
          isArray: true,
          type: 'ID',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        hotelBrandName: {
          name: 'hotelBrandName',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        hotelPropertyName: {
          name: 'hotelPropertyName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        assignedAffiliationID: {
          name: 'assignedAffiliationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'ApplicationSearchRecords',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byApplicationId',
            queryField: 'getApplicationSearchRecordsByApplicationID',
            fields: ['applicationID'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'private',
                operations: ['read'],
              },
              {
                allow: 'private',
                operations: ['create', 'read', 'update', 'delete'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
    StaySearchRecord: {
      name: 'StaySearchRecord',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        applicationID: {
          name: 'applicationID',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        stayID: {
          name: 'stayID',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        Application: {
          name: 'Application',
          isArray: false,
          type: {
            model: 'Application',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'applicationID',
          },
        },
        Stay: {
          name: 'Stay',
          isArray: false,
          type: {
            model: 'Stay',
          },
          isRequired: false,
          attributes: [],
          association: {
            connectionType: 'HAS_ONE',
            associatedWith: 'id',
            targetName: 'stayID',
          },
        },
        applicationStatus: {
          name: 'applicationStatus',
          isArray: false,
          type: {
            enum: 'Applicationstatus',
          },
          isRequired: false,
          attributes: [],
        },
        staysStatus: {
          name: 'staysStatus',
          isArray: false,
          type: {
            enum: 'Staystatus',
          },
          isRequired: false,
          attributes: [],
        },
        checkInDates: {
          name: 'checkInDates',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        checkOutDates: {
          name: 'checkOutDates',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        primaryCheckInDate: {
          name: 'primaryCheckInDate',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        primaryCheckOutDate: {
          name: 'primaryCheckOutDate',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        noteActions: {
          name: 'noteActions',
          isArray: true,
          type: 'AWSJSON',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        assignedAdminID: {
          name: 'assignedAdminID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        assignedAdminName: {
          name: 'assignedAdminName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        assignedLiaisonID: {
          name: 'assignedLiaisonID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        assignedLiaisonName: {
          name: 'assignedLiaisonName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        groupID: {
          name: 'groupID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        groupName: {
          name: 'groupName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        confirmationNumber: {
          name: 'confirmationNumber',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        referrerName: {
          name: 'referrerName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        referrerEmail: {
          name: 'referrerEmail',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        serviceMemberName: {
          name: 'serviceMemberName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        serviceMemberEmail: {
          name: 'serviceMemberEmail',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        serviceMemberBranchOfService: {
          name: 'serviceMemberBranchOfService',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        serviceMemberDutyStatus: {
          name: 'serviceMemberDutyStatus',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        adminIsUnread: {
          name: 'adminIsUnread',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        liaisonIsUnread: {
          name: 'liaisonIsUnread',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        guestNames: {
          name: 'guestNames',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        guestEmails: {
          name: 'guestEmails',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        liaisonAffiliationID: {
          name: 'liaisonAffiliationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        liaisonAffiliationName: {
          name: 'liaisonAffiliationName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        referrerAffiliationID: {
          name: 'referrerAffiliationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        referrerAffiliationName: {
          name: 'referrerAffiliationName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        adminAffiliationID: {
          name: 'adminAffiliationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        adminAffiliationName: {
          name: 'adminAffiliationName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        treatmentCenterID: {
          name: 'treatmentCenterID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        treatmentCenterName: {
          name: 'treatmentCenterName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        baseAssignedID: {
          name: 'baseAssignedID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        baseAssignedName: {
          name: 'baseAssignedName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        vaAssignedID: {
          name: 'vaAssignedID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        vaAssignedName: {
          name: 'vaAssignedName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        hotelChainID: {
          name: 'hotelChainID',
          isArray: true,
          type: 'ID',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        hotelChainName: {
          name: 'hotelChainName',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        hotelBrandID: {
          name: 'hotelBrandID',
          isArray: true,
          type: 'ID',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        hotelBrandName: {
          name: 'hotelBrandName',
          isArray: true,
          type: 'String',
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
        },
        hotelPropertyName: {
          name: 'hotelPropertyName',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        assignedAffiliationID: {
          name: 'assignedAffiliationID',
          isArray: false,
          type: 'ID',
          isRequired: false,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'StaySearchRecords',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'searchable',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byApplicationId',
            queryField: 'getStaySearchRecordsByApplicationID',
            fields: ['applicationID'],
          },
        },
        {
          type: 'key',
          properties: {
            name: 'byStayId',
            queryField: 'getStaySearchRecordsByStayID',
            fields: ['stayID'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'private',
                operations: ['read'],
              },
              {
                allow: 'private',
                operations: ['create', 'read', 'update', 'delete'],
                provider: 'iam',
              },
            ],
          },
        },
      ],
    },
  },
  enums: {
    Staytype: {
      name: 'Staytype',
      values: ['INITIAL', 'EXTENDED'],
    },
    Paymenttypestatus: {
      name: 'Paymenttypestatus',
      values: ['DRAFT', 'ACTIVE', 'ARCHIVED'],
    },
    Paymenttypetype: {
      name: 'Paymenttypetype',
      values: ['SYSTEM', 'USERGENERATED'],
    },
    Staystatus: {
      name: 'Staystatus',
      values: [
        'DRAFT',
        'RETURNED',
        'REQUESTED',
        'EXCEPTION',
        'APPROVED',
        'DECLINED',
        'COMPLETED',
        'REVIEWED',
        'CLOSED',
      ],
    },
    Roomtype: {
      name: 'Roomtype',
      values: ['KING1', 'QUEEN2', 'DOUBLE2', 'OTHER'],
    },
    Roomfeatures: {
      name: 'Roomfeatures',
      values: [
        'HEARINGACCESSIBLE',
        'ROLLINSHOWER',
        'NEARANELEVATOR',
        'MOBILITYACCESSIBLE',
        'LOWERFLOOR',
      ],
    },
    Hotelpropertystatus: {
      name: 'Hotelpropertystatus',
      values: ['DRAFT', 'PENDING', 'ACTIVE', 'ARCHIVED', 'BLACKLISTED'],
    },
    Affiliationtype: {
      name: 'Affiliationtype',
      values: ['FISHERHOUSE', 'MEDICALCENTER', 'BASE', 'ORGANIZATION'],
    },
    Affiliationstatus: {
      name: 'Affiliationstatus',
      values: ['DRAFT', 'PENDING', 'ACTIVE', 'ARCHIVED'],
    },
    Branchesofservice: {
      name: 'Branchesofservice',
      values: ['AIRFORCE', 'COASTGUARD', 'NAVY', 'ARMY', 'MARINES'],
    },
    Hotelchainstatus: {
      name: 'Hotelchainstatus',
      values: ['DRAFT', 'PENDING', 'ACTIVE', 'ARCHIVED'],
    },
    Hotelbrandstatus: {
      name: 'Hotelbrandstatus',
      values: ['DRAFT', 'PENDING', 'ACTIVE', 'ARCHIVED'],
    },
    Applicationstatus: {
      name: 'Applicationstatus',
      values: [
        'REQUESTED',
        'EXCEPTION',
        'APPROVED',
        'COMPLETED',
        'DRAFT',
        'RETURNED',
        'DECLINED',
        'REVIEWED',
        'CLOSED',
      ],
    },
    Timezone: {
      name: 'Timezone',
      values: ['EASTERN', 'CENTRAL', 'MOUNTAIN', 'PACIFIC'],
    },
    Userstatus: {
      name: 'Userstatus',
      values: ['DRAFT', 'PENDING', 'ACTIVE', 'INACTIVE'],
    },
    Readstatus: {
      name: 'Readstatus',
      values: ['READ', 'UNREAD'],
    },
    Relationshiptoservicemember: {
      name: 'Relationshiptoservicemember',
      values: [
        'AUNT',
        'BOYFRIEND',
        'BROTHER',
        'BROTHERINLAW',
        'CAREGIVER',
        'COUSIN',
        'DAUGHTER',
        'DAUGHTERINLAW',
        'EXHUSBAND',
        'EXWIFE',
        'FATHER',
        'FATHERINLAW',
        'FIANCE',
        'FIANCEE',
        'FRIEND',
        'GIRLFRIEND',
        'GRANDCHILD',
        'GRANDFATHER',
        'GRANDMOTHER',
        'HUSBAND',
        'MOTHER',
        'MOTHERINLAW',
        'NEPHEW',
        'NIECE',
        'NONMEDICALASSISTANT',
        'SELF',
        'SISTER',
        'SISTERINLAW',
        'SON',
        'STEPDAUGHTER',
        'STEPSON',
        'UNCLE',
        'WIFE',
      ],
    },
    Servicememberstatus: {
      name: 'Servicememberstatus',
      values: ['ACTIVEDUTY', 'RESERVE', 'NATIONALGUARD', 'VETERAN'],
    },
    Guesttype: {
      name: 'Guesttype',
      values: ['PRIMARY', 'ADDITIONAL'],
    },
    Groupstatus: {
      name: 'Groupstatus',
      values: ['DRAFT', 'ACTIVE', 'ARCHIVED'],
    },
    Noteaction: {
      name: 'Noteaction',
      values: [
        'NEW_APPLICATION',
        'REQUEST_INITIAL_STAY',
        'REQUEST_EXCEPTION',
        'REQUEST_EXTENDED_STAY',
        'COMPLETE_INITIAL_STAY',
        'COMPLETE_EXTENDED_STAY',
        'CHANGE_MANAGER',
        'ADD_NOTE',
        'REQUEST',
        'RETURN',
        'DECLINE',
        'APPROVE',
        'COMPLETE',
        'REVIEWED',
        'UNREVIEWED',
        'CLOSE',
        'CHANGE_ADMIN',
        'CHANGE_DATA',
        'REGRESS',
        'APPROVE_EXTENDED_STAY',
        'REGRESS_EXTENDED_STAY',
        'ADD_GROUP',
        'REMOVE_GROUP',
      ],
    },
    Cardtype: {
      name: 'Cardtype',
      values: ['AMEX', 'MASTERCARD', 'VISA'],
    },
    Cardstatus: {
      name: 'Cardstatus',
      values: ['DRAFT', 'ACTIVE', 'ARCHIVED'],
    },
  },
  nonModels: {
    S3Object: {
      name: 'S3Object',
      fields: {
        key: {
          name: 'key',
          isArray: false,
          type: 'String',
          isRequired: true,
          attributes: [],
        },
        user: {
          name: 'user',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
      },
    },
  },
  version: '5a975b95a744210ff12b7a25c5246c4a',
};
